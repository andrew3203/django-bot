# Generated by Django 3.2.9 on 2021-11-18 06:50

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tgbot.models


class Migration(migrations.Migration):

    dependencies = [
        ('tgbot', '0002_delete_location'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('cost', models.IntegerField(verbose_name='Цена в рублях')),
                ('gold_amount', models.IntegerField(verbose_name='Количество золотых')),
            ],
            options={
                'verbose_name': 'Вариант оплаты',
                'verbose_name_plural': 'Варианты оплаты',
                'ordering': ['cost'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=30, unique=True, verbose_name='Название')),
                ('text', models.TextField(max_length=1200, verbose_name='Текст вопроса')),
                ('timer', models.TimeField(blank=True, verbose_name='Время на решение')),
                ('file', models.FileField(blank=True, upload_to='question/', verbose_name='Файл')),
                ('answer_variants', models.TextField(blank=True, max_length=500, verbose_name='Варианты ответа')),
                ('right_answers', models.TextField(blank=True, max_length=1000, verbose_name='Правильные варианты')),
                ('answer_type', models.CharField(choices=[('Word', 'Слово'), ('FlyButtons', 'Летающие кнопки'), ('Sentence', 'Предложение'), ('Poll', 'Опрос'), ('Quiz', 'Квиз'), ('KBButtons', 'Доп. Клавиатура')], default='FlyButtons', max_length=15, verbose_name='Тип ответа')),
                ('difficulty_lvl', models.IntegerField(choices=[(0, 'Пробный'), (1, 'Начальный'), (2, 'Средний'), (3, 'Сложный'), (4, 'Особый')], default=1, verbose_name='Уровень сложности')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='SupportMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=300, verbose_name='Текст сообщения')),
                ('role', models.CharField(max_length=20, verbose_name='Роль')),
                ('file', models.FileField(blank=True, upload_to='message/', verbose_name='Файл')),
                ('is_active', models.BooleanField(default=False, verbose_name='Использовать в качестве ответа')),
            ],
            options={
                'verbose_name': 'Служебное сообщение',
                'verbose_name_plural': 'Служебные сообщения',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, verbose_name='Название')),
                ('is_visible', models.BooleanField(default=False, verbose_name='Виден')),
                ('questions', models.ManyToManyField(blank=True, help_text='Выпросы этого теста', related_name='test', to='tgbot.Question', verbose_name='Вопросы')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
                'ordering': ['short_name'],
            },
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': ['-date_joined'], 'verbose_name': 'Телеграмм пользователь', 'verbose_name_plural': 'Телеграмм пользователи'},
        ),
        migrations.AddField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Дата регистрации'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Почта'),
        ),
        migrations.AddField(
            model_name='user',
            name='gold',
            field=models.IntegerField(blank=True, default=1, verbose_name='Золото'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=False, verbose_name='Активный'),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(default='Гость', max_length=256, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_admin',
            field=models.BooleanField(default=False, verbose_name='Администратор'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_banned',
            field=models.BooleanField(default=False, verbose_name='Забанин'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_blocked_bot',
            field=models.BooleanField(default=False, verbose_name='Заблокировал бота'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_moderator',
            field=models.BooleanField(default=False, verbose_name='Модератор'),
        ),
        migrations.AlterField(
            model_name='user',
            name='language_code',
            field=models.CharField(blank=True, max_length=8, null=True, verbose_name='Язык'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=256, null=True, verbose_name='Фамилия'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_id',
            field=models.IntegerField(primary_key=True, serialize=False, verbose_name='Chat id'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(blank=True, max_length=32, null=True, verbose_name='Никнейн'),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('user_id', 'email')},
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(blank=True, max_length=50, verbose_name='Название')),
                ('is_visible', models.BooleanField(default=False, verbose_name='Видна')),
                ('tests', models.ManyToManyField(blank=True, help_text='Тесты этой темы', related_name='them', to='tgbot.Test', verbose_name='Тесты')),
            ],
            options={
                'verbose_name': 'Тема\xa0',
                'verbose_name_plural': 'Темы',
                'ordering': ['short_name'],
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('text', models.TextField(max_length=250, verbose_name='Текст')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_expire', models.DateTimeField(default=tgbot.models.get_deadline, verbose_name='Дата окончания действия')),
                ('clics_left', models.IntegerField(default=100, verbose_name='Оставшееся количество использований')),
                ('clics_amount', models.IntegerField(default=0, verbose_name='Общее количество использований')),
                ('discount', models.IntegerField(default=10, verbose_name='Скидка')),
                ('plan', models.OneToOneField(blank=True, help_text='Вариант оплаты', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paymentplan', to='tgbot.paymentplan', verbose_name='Вариант оплаты')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата платежа')),
                ('plan', models.OneToOneField(blank=True, help_text='Вариант оплаты', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment', to='tgbot.paymentplan', verbose_name='Вариант оплаты')),
                ('promocode', models.OneToOneField(blank=True, default=None, help_text='Промокод', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='payment', to='tgbot.promocode', verbose_name='Промокод')),
                ('user', models.OneToOneField(blank=True, default='DELETED', help_text='Пользователь', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='payment', to='tgbot.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата ответа')),
                ('time_to_solve', models.TimeField(verbose_name='Время, потраченное на решение')),
                ('answer_text', models.TextField(blank=True, max_length=500, verbose_name='Текст ответа')),
                ('is_correct', models.BooleanField(blank=True, default=False, verbose_name='Правильность')),
                ('question', models.OneToOneField(blank=True, help_text='Вопрос этого ответа', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='tgbot.question', verbose_name='Вопрос')),
                ('user', models.OneToOneField(blank=True, help_text='Автор этого ответа', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='tgbot.user', verbose_name='Автор ответа')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
                'ordering': ['-date_created'],
            },
        ),
    ]
